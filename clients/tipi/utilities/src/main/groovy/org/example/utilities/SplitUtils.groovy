/**
 * Part of Jade-Tipi â€” an open scientific metadata framework.
 *
 * Copyright (c) 2025 Duncan Scott and Jade-Tipi contributors
 * SPDX-License-Identifier: AGPL-3.0-only OR Commercial
 *
 * This file is part of a dual-licensed distribution:
 * - Under AGPL-3.0 for open-source use (see LICENSE)
 * - Under Commercial License for proprietary use (see DUAL-LICENSE.txt or contact licensing@jade-tipi.org)
 *
 * https://jade-tipi.org/license
 */
/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example.utilities

import groovy.transform.PackageScope
import org.example.list.LinkedList

@PackageScope
class SplitUtils {
    static LinkedList split(String source) {
        int lastFind = 0
        int currentFind = 0
        LinkedList result = new LinkedList()

        while ((currentFind = source.indexOf(' ', lastFind)) != -1) {
            String token = source.substring(lastFind)
            if (currentFind != -1) {
                token = token.substring(0, currentFind - lastFind)
            }

            addIfValid(token, result)
            lastFind = currentFind + 1
        }

        String token = source.substring(lastFind)
        addIfValid(token, result)

        return result
    }

    private static void addIfValid(String token, LinkedList list) {
        if (isTokenValid(token)) {
            list.add(token)
        }
    }

    private static boolean isTokenValid(String token) {
        return !token.isEmpty()
    }
}
