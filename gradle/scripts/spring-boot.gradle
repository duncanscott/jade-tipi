apply from: "${rootProject.projectDir}/gradle/scripts/repository.gradle"
apply from: "${rootProject.projectDir}/gradle/scripts/integration-test.gradle"
apply from: "${rootProject.projectDir}/gradle/scripts/functional-test.gradle"
apply from: "${rootProject.projectDir}/gradle/scripts/tag.gradle"
apply from: "${rootProject.projectDir}/gradle/scripts/deploy.gradle"
apply from: "${rootProject.projectDir}/gradle/scripts/remotes.gradle"

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ["-Xlint:all"]
}
// Add SPDX to JAR manifest:
jar {
    manifest {
        attributes(
                "Implementation-Title": "Jade-Tipi",
                "Implementation-Version": project.version,
                "License": "AGPL-3.0-only",
                "SPDX-License-Identifier": "AGPL-3.0-only",
                "Project-URL": "https://jade-tipi.org"
        )
    }
}

bootJar {
    archiveFileName = "${project.name}.jar"
}

tasks.register('printBootJar') {
    doLast { println tasks.named('bootJar').get().archiveFile.get().asFile.absolutePath }
}

// expand properties in application.yml and services.properties
processResources {
    // Declare gradle.properties as an input so the task re-runs when version changes
    inputs.file("${rootProject.projectDir}/gradle.properties")

    doFirst() {
        project.ext.gitCommit = "git rev-parse --verify HEAD".execute().text.trim()
        project.ext.buildDate = "${new Date()}".trim()
    }
    filesMatching("**/service.properties") { FileCopyDetails fileCopyDetails ->
        expand project.properties
    }
    filesMatching("**/application.yml") { FileCopyDetails fileCopyDetails ->
        expand project.properties
    }
}
compileJava.inputs.files(processResources)
compileGroovy.inputs.files(processResources)
